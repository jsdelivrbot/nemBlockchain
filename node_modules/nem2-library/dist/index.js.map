{"version":3,"sources":["../src/index.js"],"names":["KeyPair","ApiClient","AccountDTO","AccountIds","AccountInfoDTO","AccountMetaDTO","AnnounceTransactionInfoDTO","BlockDTO","BlockInfoDTO","BlockMetaDTO","BlockchainScoreDTO","BlockchainStorageInfoDTO","HeightDTO","MosaicDTO","MosaicDefinitionDTO","MosaicIds","MosaicInfoDTO","MosaicNameDTO","MosaicPropertiesDTO","Multisig","MultisigAccountGraphInfoDTO","MultisigAccountInfoDTO","NamespaceDTO","NamespaceIds","NamespaceInfoDTO","NamespaceMosaicMetaDTO","NamespaceNameDTO","TransactionHashes","TransactionIds","TransactionPayload","TransactionStatusDTO","UInt64DTO","AccountRoutesApi","BlockchainRoutesApi","MosaicRoutesApi","NamespaceRoutesApi","TransactionRoutesApi","NetworkRoutesApi","BlockListener","ConfirmedTransactionsListener","PartialTransactionsListener","TransactionStatusListener","UnconfirmedTransactionsListener","Schema","CosignatureTransaction","AggregateTransaction","deadline","HashLockTransaction","MosaicCreationTransaction","MosaicSupplyChangeTransaction","MultisigModificationTransaction","NamespaceCreationTransaction","SecretLockTransaction","SecretProofTransaction","TransferTransaction","VerifiableTransaction","VerifiableTransactionBuilder","crypto","nacl_catapult","convert","sha3Hasher","IdGenerator","uint64","address","mosaicId","namespaceId","subnamespaceParentId","subnamespaceNamespaceId"],"mappings":";;;;;;;AA8BA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;IAAYA,O;;AACZ;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAoCEC,S;QAMAC,U;QAMAC,U;QAMAC,c;QAMAC,c;QAMAC,0B;QAMAC,Q;QAMAC,Y;QAMAC,Y;QAMAC,kB;QAMAC,wB;QAMAC,S;QAMAC,S;QAMAC,mB;QAMAC,S;QAMAC,a;QAMAC,a;QAMAC,mB;QAMAC,Q;QAMAC,2B;QAMAC,sB;QAMAC,Y;QAMAC,Y;QAMAC,gB;QAMAC,sB;QAMAC,gB;QAMAC,iB;QAMAC,c;QAMAC,kB;QAMAC,oB;QAMAC,S;QAMAC,gB;QAMAC,mB;QAMAC,e;QAMAC,kB;QAMAC,oB;QAMAC,gB;QAQAC,a;QAMAC,6B;QAMAC,2B;QAMAC,yB;QAKAC,+B;QAKAC,M;QAKAC,sB;QAKAC,oB;QAKAC,Q;QAKAC,mB;QAKAC,yB;QAKAC,6B;QAKAC,+B;QAKAC,4B;QAKAC,qB;QAKAC,sB;QAKAC,mB;QAKAC,qB;QAKAC,4B;QAKAxD,O,GAAAA,O;QAKAyD,M;QAKAC,a;QAKAC,O;QAKAC,U;QAKAC,W;QAKAC,M;QAKAC,O;QAKAC,Q;QAKAC,W;QAKAC,oB;QAKAC,uB,+CA9fF;;;;;;;;;;;;;;;;AAgBA","file":"index.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * NIS2 API\n * This document defines all the nis2 api routes and behaviour\n *\n * OpenAPI spec version: 1.0.0\n * Contact: guillemchain@gmail.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from './ApiClient';\nimport AccountDTO from './model/AccountDTO';\nimport AccountIds from './model/AccountIds';\nimport AccountInfoDTO from './model/AccountInfoDTO';\nimport AccountMetaDTO from './model/AccountMetaDTO';\nimport AnnounceTransactionInfoDTO from './model/AnnounceTransactionInfoDTO';\nimport BlockDTO from './model/BlockDTO';\nimport BlockInfoDTO from './model/BlockInfoDTO';\nimport BlockMetaDTO from './model/BlockMetaDTO';\nimport BlockchainScoreDTO from './model/BlockchainScoreDTO';\nimport BlockchainStorageInfoDTO from './model/BlockchainStorageInfoDTO';\nimport HeightDTO from './model/HeightDTO';\nimport MosaicDTO from './model/MosaicDTO';\nimport MosaicDefinitionDTO from './model/MosaicDefinitionDTO';\nimport MosaicIds from './model/MosaicIds';\nimport MosaicInfoDTO from './model/MosaicInfoDTO';\nimport MosaicNameDTO from './model/MosaicNameDTO';\nimport MosaicPropertiesDTO from './model/MosaicPropertiesDTO';\nimport Multisig from './model/Multisig';\nimport MultisigAccountGraphInfoDTO from './model/MultisigAccountGraphInfoDTO';\nimport MultisigAccountInfoDTO from './model/MultisigAccountInfoDTO';\nimport NamespaceDTO from './model/NamespaceDTO';\nimport NamespaceIds from './model/NamespaceIds';\nimport NamespaceInfoDTO from './model/NamespaceInfoDTO';\nimport NamespaceMosaicMetaDTO from './model/NamespaceMosaicMetaDTO';\nimport NamespaceNameDTO from './model/NamespaceNameDTO';\nimport TransactionHashes from './model/TransactionHashes';\nimport TransactionIds from './model/TransactionIds';\nimport TransactionPayload from './model/TransactionPayload';\nimport TransactionStatusDTO from './model/TransactionStatusDTO';\nimport UInt64DTO from './model/UInt64DTO';\nimport AccountRoutesApi from './api/AccountRoutesApi';\nimport BlockchainRoutesApi from './api/BlockchainRoutesApi';\nimport MosaicRoutesApi from './api/MosaicRoutesApi';\nimport NamespaceRoutesApi from './api/NamespaceRoutesApi';\nimport TransactionRoutesApi from './api/TransactionRoutesApi';\nimport NetworkRoutesApi from './api/NetworkRoutesApi';\nimport BlockListener from './listeners/BlockListener';\nimport ConfirmedTransactionsListener from './listeners/ConfirmedTransactionsListener';\nimport PartialTransactionsListener from './listeners/PartialTransactionsListener';\nimport TransactionStatusListener from './listeners/TransactionStatusListener';\nimport UnconfirmedTransactionsListener from './listeners/UnconfirmedTransactionsListener';\nimport Schema from './schema/Schema';\nimport CosignatureTransaction from './transactions/CosignatureTransaction';\nimport AggregateTransaction from './transactions/AggregateTransaction';\nimport HashLockTransaction from './transactions/HashLockTransaction';\nimport deadline from './transactions/Deadline';\nimport MosaicCreationTransaction from './transactions/MosaicCreationTransaction';\nimport MosaicSupplyChangeTransaction from './transactions/MosaicSupplyChangeTransaction';\nimport MultisigModificationTransaction from './transactions/MultisigModificationTransaction';\nimport NamespaceCreationTransaction from './transactions/NamespaceCreationTransaction';\nimport SecretLockTransaction from './transactions/SecretLockTransaction';\nimport SecretProofTransaction from './transactions/SecretProofTransaction';\nimport TransferTransaction from './transactions/TransferTransaction';\nimport VerifiableTransaction from './transactions/VerifiableTransaction';\nimport VerifiableTransactionBuilder from './transactions/VerificableTransactionBuilder';\nimport * as KeyPair from './crypto/keyPair';\nimport crypto from './crypto/crypto';\nimport nacl_catapult from './crypto/nacl_catapult';\nimport sha3Hasher from './crypto/sha3Hasher';\nimport convert from './coders/convert';\nimport IdGenerator from './coders/idGenerator';\nimport uint64 from './coders/uint64';\nimport address from './coders/address';\nimport { mosaicId, namespaceId, subnamespaceNamespaceId, subnamespaceParentId } from './transactions/NamespaceMosaicId';\n\n\n/**\n * This_document_defines_all_the_nis2_api_routes_and_behaviour.<br>\n * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.\n * <p>\n * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:\n * <pre>\n * var Nis2Api = require('index'); // See note below*.\n * var xxxSvc = new Nis2Api.XxxApi(); // Allocate the API class we're going to use.\n * var yyyModel = new Nis2Api.Yyy(); // Construct a model instance.\n * yyyModel.someProperty = 'someValue';\n * ...\n * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n * ...\n * </pre>\n * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})\n * and put the application logic within the callback function.</em>\n * </p>\n * <p>\n * A non-AMD browser application (discouraged) might do something like this:\n * <pre>\n * var xxxSvc = new Nis2Api.XxxApi(); // Allocate the API class we're going to use.\n * var yyy = new Nis2Api.Yyy(); // Construct a model instance.\n * yyyModel.someProperty = 'someValue';\n * ...\n * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n * ...\n * </pre>\n * </p>\n * @module index\n * @version 1.0.0\n */\nexport {\n\t/**\n\t * The ApiClient constructor.\n\t * @property {module:ApiClient}\n\t */\n\t\tApiClient,\n\n\t/**\n\t * The AccountDTO model constructor.\n\t * @property {module:model/AccountDTO}\n\t */\n\t\tAccountDTO,\n\n\t/**\n\t * The AccountIds model constructor.\n\t * @property {module:model/AccountIds}\n\t */\n\t\tAccountIds,\n\n\t/**\n\t * The AccountInfoDTO model constructor.\n\t * @property {module:model/AccountInfoDTO}\n\t */\n\t\tAccountInfoDTO,\n\n\t/**\n\t * The AccountMetaDTO model constructor.\n\t * @property {module:model/AccountMetaDTO}\n\t */\n\t\tAccountMetaDTO,\n\n\t/**\n\t * The AnnounceTransactionInfoDTO model constructor.\n\t * @property {module:model/AnnounceTransactionInfoDTO}\n\t */\n\t\tAnnounceTransactionInfoDTO,\n\n\t/**\n\t * The BlockDTO model constructor.\n\t * @property {module:model/BlockDTO}\n\t */\n\t\tBlockDTO,\n\n\t/**\n\t * The BlockInfoDTO model constructor.\n\t * @property {module:model/BlockInfoDTO}\n\t */\n\t\tBlockInfoDTO,\n\n\t/**\n\t * The BlockMetaDTO model constructor.\n\t * @property {module:model/BlockMetaDTO}\n\t */\n\t\tBlockMetaDTO,\n\n\t/**\n\t * The BlockchainScoreDTO model constructor.\n\t * @property {module:model/BlockchainScoreDTO}\n\t */\n\t\tBlockchainScoreDTO,\n\n\t/**\n\t * The BlockchainStorageInfoDTO model constructor.\n\t * @property {module:model/BlockchainStorageInfoDTO}\n\t */\n\t\tBlockchainStorageInfoDTO,\n\n\t/**\n\t * The HeightDTO model constructor.\n\t * @property {module:model/HeightDTO}\n\t */\n\t\tHeightDTO,\n\n\t/**\n\t * The MosaicDTO model constructor.\n\t * @property {module:model/MosaicDTO}\n\t */\n\t\tMosaicDTO,\n\n\t/**\n\t * The MosaicDefinitionDTO model constructor.\n\t * @property {module:model/MosaicDefinitionDTO}\n\t */\n\t\tMosaicDefinitionDTO,\n\n\t/**\n\t * The MosaicIds model constructor.\n\t * @property {module:model/MosaicIds}\n\t */\n\t\tMosaicIds,\n\n\t/**\n\t * The MosaicInfoDTO model constructor.\n\t * @property {module:model/MosaicInfoDTO}\n\t */\n\t\tMosaicInfoDTO,\n\n\t/**\n\t * The MosaicNameDTO model constructor.\n\t * @property {module:model/MosaicNameDTO}\n\t */\n\t\tMosaicNameDTO,\n\n\t/**\n\t * The MosaicPropertiesDTO model constructor.\n\t * @property {module:model/MosaicPropertiesDTO}\n\t */\n\t\tMosaicPropertiesDTO,\n\n\t/**\n\t * The Multisig model constructor.\n\t * @property {module:model/Multisig}\n\t */\n\t\tMultisig,\n\n\t/**\n\t * The MultisigAccountGraphInfoDTO model constructor.\n\t * @property {module:model/MultisigAccountGraphInfoDTO}\n\t */\n\t\tMultisigAccountGraphInfoDTO,\n\n\t/**\n\t * The MultisigAccountInfoDTO model constructor.\n\t * @property {module:model/MultisigAccountInfoDTO}\n\t */\n\t\tMultisigAccountInfoDTO,\n\n\t/**\n\t * The NamespaceDTO model constructor.\n\t * @property {module:model/NamespaceDTO}\n\t */\n\t\tNamespaceDTO,\n\n\t/**\n\t * The NamespaceIds model constructor.\n\t * @property {module:model/NamespaceIds}\n\t */\n\t\tNamespaceIds,\n\n\t/**\n\t * The NamespaceInfoDTO model constructor.\n\t * @property {module:model/NamespaceInfoDTO}\n\t */\n\t\tNamespaceInfoDTO,\n\n\t/**\n\t * The NamespaceMosaicMetaDTO model constructor.\n\t * @property {module:model/NamespaceMosaicMetaDTO}\n\t */\n\t\tNamespaceMosaicMetaDTO,\n\n\t/**\n\t * The NamespaceNameDTO model constructor.\n\t * @property {module:model/NamespaceNameDTO}\n\t */\n\t\tNamespaceNameDTO,\n\n\t/**\n\t * The TransactionHashes model constructor.\n\t * @property {module:model/TransactionHashes}\n\t */\n\t\tTransactionHashes,\n\n\t/**\n\t * The TransactionIds model constructor.\n\t * @property {module:model/TransactionIds}\n\t */\n\t\tTransactionIds,\n\n\t/**\n\t * The TransactionPayload model constructor.\n\t * @property {module:model/TransactionPayload}\n\t */\n\t\tTransactionPayload,\n\n\t/**\n\t * The TransactionStatusDTO model constructor.\n\t * @property {module:model/TransactionStatusDTO}\n\t */\n\t\tTransactionStatusDTO,\n\n\t/**\n\t * The UInt64DTO model constructor.\n\t * @property {module:model/UInt64DTO}\n\t */\n\t\tUInt64DTO,\n\n\t/**\n\t * The AccountRoutesApi service constructor.\n\t * @property {module:api/AccountRoutesApi}\n\t */\n\t\tAccountRoutesApi,\n\n\t/**\n\t * The BlockchainRoutesApi service constructor.\n\t * @property {module:api/BlockchainRoutesApi}\n\t */\n\t\tBlockchainRoutesApi,\n\n\t/**\n\t * The MosaicRoutesApi service constructor.\n\t * @property {module:api/MosaicRoutesApi}\n\t */\n\t\tMosaicRoutesApi,\n\n\t/**\n\t * The NamespaceRoutesApi service constructor.\n\t * @property {module:api/NamespaceRoutesApi}\n\t */\n\t\tNamespaceRoutesApi,\n\n\t/**\n\t * The TransactionRoutesApi service constructor.\n\t * @property {module:api/TransactionRoutesApi}\n\t */\n\t\tTransactionRoutesApi,\n\n\t/**\n\t * The NetworkRoutesApi service constructor.\n\t * @property {module:api/NetworkRoutesApi}\n\t */\n\t\tNetworkRoutesApi,\n\n\t// ////// Listeners Region\n\n\t/**\n\t *\n\t * @property {module:listeners/BlockListener}\n\t */\n\t\tBlockListener,\n\n\t/**\n\t *\n\t * @property {module:listeners/ConfirmedTransactionsListener}\n\t */\n\t\tConfirmedTransactionsListener,\n\n\t/**\n\t *\n\t * @property {module:listeners/PartialTransactionsListener}\n\t */\n\t\tPartialTransactionsListener,\n\n\t/**\n\t *\n\t * @property {module:listeners/TransactionStatusListener}\n\t */\n\t\tTransactionStatusListener,\n\n\t/**\n\t * @property {module:listeners/UnconfirmedTransactionsListener}\n\t */\n\t\tUnconfirmedTransactionsListener,\n\n\t/**\n\t * @property {module:schema/Schema}\n\t */\n\t\tSchema,\n\n\t/**\n\t * @property {module:transactions/CosignatureTransaction}\n\t */\n\t\tCosignatureTransaction,\n\n\t/**\n\t * @property {module:transactions/AggregateTransaction}\n\t */\n\t\tAggregateTransaction,\n\n\t/**\n\t * @property {module:transactions/deadline}\n\t */\n\t\tdeadline,\n\n\t/**\n\t * @property {module:transactions/HashLockTransaction}\n\t */\n\t\tHashLockTransaction,\n\n\t/**\n\t * @property {module:transactions/MosaicCreationTransaction}\n\t */\n\t\tMosaicCreationTransaction,\n\n\t/**\n\t * @property {module:transactions/MosaicSupplyChangeTransaction}\n\t */\n\t\tMosaicSupplyChangeTransaction,\n\n\t/**\n\t * @property {module:transactions/MultisigModificationTransaction}\n\t */\n\t\tMultisigModificationTransaction,\n\n\t/**\n\t * @property {module:transactions/NamespaceCreationTransaction}\n\t */\n\t\tNamespaceCreationTransaction,\n\n\t/**\n\t * @property {module:transactions/SecretLockTransaction}\n\t */\n\t\tSecretLockTransaction,\n\n\t/**\n\t * @property {module:transactions/SecretProofTransaction}\n\t */\n\t\tSecretProofTransaction,\n\n\t/**\n\t * @property {module:transactions/TransferTransaction}\n\t */\n\t\tTransferTransaction,\n\n\t/**\n\t * @property {module:transactions/VerifiableTransaction}\n\t */\n\t\tVerifiableTransaction,\n\n\t/**\n\t * @property {module:transactions/VerifiableTransactionBuilder}\n\t */\n\t\tVerifiableTransactionBuilder,\n\n\t/**\n\t * @property {module:crypto/keyPair}\n\t */\n\t\tKeyPair,\n\n\t/**\n\t * @property {module:crypto/crypto}\n\t */\n\t\tcrypto,\n\n\t/**\n\t * @property {module:crypto/nacl_catapult}\n\t */\n\t\tnacl_catapult,\n\n\t/**\n\t * @property {module:coders/convert}\n\t */\n\t\tconvert,\n\n\t/**\n\t *\n\t */\n\t\tsha3Hasher,\n\n\t/**\n\t * @property {module:coders/idGenerator}\n\t */\n\t\tIdGenerator,\n\n\t/**\n\t * @property {module:coders/uint64}\n\t */\n\t\tuint64,\n\n\t/**\n\t * @property {module:coders/address}\n\t */\n\t\taddress,\n\n\t/**\n\t * @property {module:transactions/mosaicId}\n\t */\n\t\tmosaicId,\n\n\t/**\n\t * @property {module:transactions/namespaceId}\n\t */\n\t\tnamespaceId,\n\n\t/**\n\t * @property {module:transactions/subnamespaceParentId}\n\t */\n\t\tsubnamespaceParentId,\n\n\t/**\n\t * @property {module:transactions/subnamespaceNamespaceId}\n\t */\n\t\tsubnamespaceNamespaceId\n};\n"]}