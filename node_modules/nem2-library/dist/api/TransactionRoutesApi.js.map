{"version":3,"sources":["../../src/api/TransactionRoutesApi.js"],"names":["TransactionRoutesApi","apiClient","instance","payload","postBody","undefined","Error","pathParams","queryParams","headerParams","formParams","authNames","contentTypes","accepts","returnType","Object","callApi","announceCosignatureTransactionWithHttpInfo","then","response_and_data","data","announcePartialTransactionWithHttpInfo","announceTransactionWithHttpInfo","transactionId","getTransactionWithHttpInfo","hash","getTransactionStatusWithHttpInfo","transactionIds","getTransactionsWithHttpInfo","transactionHashes","getTransactionsStatusesWithHttpInfo"],"mappings":"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","file":"TransactionRoutesApi.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * NIS2 API\n * This document defines all the nis2 api routes and behaviour\n *\n * OpenAPI spec version: 1.0.0\n * Contact: guillemchain@gmail.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport ApiClient from \"../ApiClient\";\nimport TransactionStatusDTO from '../model/TransactionStatusDTO';\n\n/**\n * TransactionRoutes service.\n * @module api/TransactionRoutesApi\n * @version 1.0.0\n */\nexport default class TransactionRoutesApi {\n\n\t/**\n\t * Constructs a new TransactionRoutesApi.\n\t * @alias module:api/TransactionRoutesApi\n\t * @class\n\t * @param {module:ApiClient} [apiClient] Optional API client implementation to use,\n\t * default to {@link module:ApiClient#instance} if unspecified.\n\t */\n\tconstructor(apiClient) {\n\t\tthis.apiClient = apiClient || ApiClient.instance;\n\t}\n\n\n\t/**\n\t * Creates cosignature transaction\n\t * Announce a cosignature transaction to the network\n\t * @param {module:model/TransactionPayload} payload Transaction payload\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Object} and HTTP response\n\t */\n\tannounceCosignatureTransactionWithHttpInfo(payload) {\n\t\tlet postBody = payload;\n\n\t\t// verify the required parameter 'payload' is set\n\t\tif (payload === undefined || payload === null) {\n\t\t\tthrow new Error(\"Missing the required parameter 'payload' when calling announceCosignatureTransaction\");\n\t\t}\n\n\n\t\tlet pathParams = {};\n\t\tlet queryParams = {};\n\t\tlet headerParams = {};\n\t\tlet formParams = {};\n\n\t\tlet authNames = [];\n\t\tlet contentTypes = [];\n\t\tlet accepts = ['application/json'];\n\t\tlet returnType = Object;\n\n\t\treturn this.apiClient.callApi(\n\t\t\t'/transaction/cosignature', 'PUT',\n\t\t\tpathParams, queryParams, headerParams, formParams, postBody,\n\t\t\tauthNames, contentTypes, accepts, returnType\n\t\t);\n\t}\n\n\t/**\n\t * Creates cosignature transaction\n\t * Announce a cosignature transaction to the network\n\t * @param {module:model/TransactionPayload} payload Transaction payload\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Object}\n\t */\n\tannounceCosignatureTransaction(payload) {\n\t\treturn this.announceCosignatureTransactionWithHttpInfo(payload)\n\t\t\t.then(function(response_and_data) {\n\t\t\t\treturn response_and_data.data;\n\t\t\t});\n\t}\n\n\n\t/**\n\t * Creates partial transaction\n\t * Announce a partial transaction to the network\n\t * @param {module:model/TransactionPayload} payload Transaction payload\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Object} and HTTP response\n\t */\n\tannouncePartialTransactionWithHttpInfo(payload) {\n\t\tlet postBody = payload;\n\n\t\t// verify the required parameter 'payload' is set\n\t\tif (payload === undefined || payload === null) {\n\t\t\tthrow new Error(\"Missing the required parameter 'payload' when calling announcePartialTransaction\");\n\t\t}\n\n\n\t\tlet pathParams = {};\n\t\tlet queryParams = {};\n\t\tlet headerParams = {};\n\t\tlet formParams = {};\n\n\t\tlet authNames = [];\n\t\tlet contentTypes = [];\n\t\tlet accepts = ['application/json'];\n\t\tlet returnType = Object;\n\n\t\treturn this.apiClient.callApi(\n\t\t\t'/transaction/partial', 'PUT',\n\t\t\tpathParams, queryParams, headerParams, formParams, postBody,\n\t\t\tauthNames, contentTypes, accepts, returnType\n\t\t);\n\t}\n\n\t/**\n\t * Creates partial transaction\n\t * Announce a partial transaction to the network\n\t * @param {module:model/TransactionPayload} payload Transaction payload\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Object}\n\t */\n\tannouncePartialTransaction(payload) {\n\t\treturn this.announcePartialTransactionWithHttpInfo(payload)\n\t\t\t.then(function(response_and_data) {\n\t\t\t\treturn response_and_data.data;\n\t\t\t});\n\t}\n\n\n\t/**\n\t * Creates new transaction\n\t * Announce a transaction to the network\n\t * @param {module:model/TransactionPayload} payload Transaction payload\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Object} and HTTP response\n\t */\n\tannounceTransactionWithHttpInfo(payload) {\n\t\tlet postBody = payload;\n\n\t\t// verify the required parameter 'payload' is set\n\t\tif (payload === undefined || payload === null) {\n\t\t\tthrow new Error(\"Missing the required parameter 'payload' when calling announceTransaction\");\n\t\t}\n\n\n\t\tlet pathParams = {};\n\t\tlet queryParams = {};\n\t\tlet headerParams = {};\n\t\tlet formParams = {};\n\n\t\tlet authNames = [];\n\t\tlet contentTypes = [];\n\t\tlet accepts = ['application/json'];\n\t\tlet returnType = Object;\n\n\t\treturn this.apiClient.callApi(\n\t\t\t'/transaction', 'PUT',\n\t\t\tpathParams, queryParams, headerParams, formParams, postBody,\n\t\t\tauthNames, contentTypes, accepts, returnType\n\t\t);\n\t}\n\n\t/**\n\t * Creates new transaction\n\t * Announce a transaction to the network\n\t * @param {module:model/TransactionPayload} payload Transaction payload\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Object}\n\t */\n\tannounceTransaction(payload) {\n\t\treturn this.announceTransactionWithHttpInfo(payload)\n\t\t\t.then(function(response_and_data) {\n\t\t\t\treturn response_and_data.data;\n\t\t\t});\n\t}\n\n\n\t/**\n\t * Get ransaction information\n\t * Returns transaction information for a given transaction id or hash\n\t * @param {String} transactionId Transaction id or hash\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Object} and HTTP response\n\t */\n\tgetTransactionWithHttpInfo(transactionId) {\n\t\tlet postBody = null;\n\n\t\t// verify the required parameter 'transactionId' is set\n\t\tif (transactionId === undefined || transactionId === null) {\n\t\t\tthrow new Error(\"Missing the required parameter 'transactionId' when calling getTransaction\");\n\t\t}\n\n\n\t\tlet pathParams = {\n\t\t\t'transactionId': transactionId\n\t\t};\n\t\tlet queryParams = {};\n\t\tlet headerParams = {};\n\t\tlet formParams = {};\n\n\t\tlet authNames = [];\n\t\tlet contentTypes = [];\n\t\tlet accepts = ['application/json'];\n\t\tlet returnType = Object;\n\n\t\treturn this.apiClient.callApi(\n\t\t\t'/transaction/{transactionId}', 'GET',\n\t\t\tpathParams, queryParams, headerParams, formParams, postBody,\n\t\t\tauthNames, contentTypes, accepts, returnType\n\t\t);\n\t}\n\n\t/**\n\t * Get ransaction information\n\t * Returns transaction information for a given transaction id or hash\n\t * @param {String} transactionId Transaction id or hash\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Object}\n\t */\n\tgetTransaction(transactionId) {\n\t\treturn this.getTransactionWithHttpInfo(transactionId)\n\t\t\t.then(function(response_and_data) {\n\t\t\t\treturn response_and_data.data;\n\t\t\t});\n\t}\n\n\n\t/**\n\t * Get transaction status\n\t * Returns transaction status for a given transaction id or hash\n\t * @param {String} hash Transaction hash\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/TransactionStatusDTO} and HTTP response\n\t */\n\tgetTransactionStatusWithHttpInfo(hash) {\n\t\tlet postBody = null;\n\n\t\t// verify the required parameter 'hash' is set\n\t\tif (hash === undefined || hash === null) {\n\t\t\tthrow new Error(\"Missing the required parameter 'hash' when calling getTransactionStatus\");\n\t\t}\n\n\n\t\tlet pathParams = {\n\t\t\t'hash': hash\n\t\t};\n\t\tlet queryParams = {};\n\t\tlet headerParams = {};\n\t\tlet formParams = {};\n\n\t\tlet authNames = [];\n\t\tlet contentTypes = [];\n\t\tlet accepts = ['application/json'];\n\t\tlet returnType = TransactionStatusDTO;\n\n\t\treturn this.apiClient.callApi(\n\t\t\t'/transaction/{hash}/status', 'GET',\n\t\t\tpathParams, queryParams, headerParams, formParams, postBody,\n\t\t\tauthNames, contentTypes, accepts, returnType\n\t\t);\n\t}\n\n\t/**\n\t * Get transaction status\n\t * Returns transaction status for a given transaction id or hash\n\t * @param {String} hash Transaction hash\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/TransactionStatusDTO}\n\t */\n\tgetTransactionStatus(hash) {\n\t\treturn this.getTransactionStatusWithHttpInfo(hash)\n\t\t\t.then(function(response_and_data) {\n\t\t\t\treturn response_and_data.data;\n\t\t\t});\n\t}\n\n\n\t/**\n\t * Get transactions information\n\t * Returns transaction information for a given set of transaction id or hash\n\t * @param {module:model/TransactionIds} transactionIds Array of transaction ids or hashes\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<Object>} and HTTP response\n\t */\n\tgetTransactionsWithHttpInfo(transactionIds) {\n\t\tlet postBody = transactionIds;\n\n\t\t// verify the required parameter 'transactionIds' is set\n\t\tif (transactionIds === undefined || transactionIds === null) {\n\t\t\tthrow new Error(\"Missing the required parameter 'transactionIds' when calling getTransactions\");\n\t\t}\n\n\n\t\tlet pathParams = {};\n\t\tlet queryParams = {};\n\t\tlet headerParams = {};\n\t\tlet formParams = {};\n\n\t\tlet authNames = [];\n\t\tlet contentTypes = [];\n\t\tlet accepts = ['application/json'];\n\t\tlet returnType = [Object];\n\n\t\treturn this.apiClient.callApi(\n\t\t\t'/transaction', 'POST',\n\t\t\tpathParams, queryParams, headerParams, formParams, postBody,\n\t\t\tauthNames, contentTypes, accepts, returnType\n\t\t);\n\t}\n\n\t/**\n\t * Get transactions information\n\t * Returns transaction information for a given set of transaction id or hash\n\t * @param {module:model/TransactionIds} transactionIds Array of transaction ids or hashes\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<Object>}\n\t */\n\tgetTransactions(transactionIds) {\n\t\treturn this.getTransactionsWithHttpInfo(transactionIds)\n\t\t\t.then(function(response_and_data) {\n\t\t\t\treturn response_and_data.data;\n\t\t\t});\n\t}\n\n\n\t/**\n\t * Get transactions information\n\t * Returns transaction information for a given set of transaction id or hash\n\t * @param {module:model/TransactionHashes} transactionHashes Array of transaction ids or hashes\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Array.<module:model/TransactionStatusDTO>} and HTTP response\n\t */\n\tgetTransactionsStatusesWithHttpInfo(transactionHashes) {\n\t\tlet postBody = transactionHashes;\n\n\t\t// verify the required parameter 'transactionHashes' is set\n\t\tif (transactionHashes === undefined || transactionHashes === null) {\n\t\t\tthrow new Error(\"Missing the required parameter 'transactionHashes' when calling getTransactionsStatuses\");\n\t\t}\n\n\n\t\tlet pathParams = {};\n\t\tlet queryParams = {};\n\t\tlet headerParams = {};\n\t\tlet formParams = {};\n\n\t\tlet authNames = [];\n\t\tlet contentTypes = [];\n\t\tlet accepts = ['application/json'];\n\t\tlet returnType = [TransactionStatusDTO];\n\n\t\treturn this.apiClient.callApi(\n\t\t\t'/transaction/statuses', 'POST',\n\t\t\tpathParams, queryParams, headerParams, formParams, postBody,\n\t\t\tauthNames, contentTypes, accepts, returnType\n\t\t);\n\t}\n\n\t/**\n\t * Get transactions information\n\t * Returns transaction information for a given set of transaction id or hash\n\t * @param {module:model/TransactionHashes} transactionHashes Array of transaction ids or hashes\n\t * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Array.<module:model/TransactionStatusDTO>}\n\t */\n\tgetTransactionsStatuses(transactionHashes) {\n\t\treturn this.getTransactionsStatusesWithHttpInfo(transactionHashes)\n\t\t\t.then(function(response_and_data) {\n\t\t\t\treturn response_and_data.data;\n\t\t\t});\n\t}\n\n\n}\n"]}