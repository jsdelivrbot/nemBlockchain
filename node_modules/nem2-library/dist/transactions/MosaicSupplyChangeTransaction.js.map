{"version":3,"sources":["../../src/transactions/MosaicSupplyChangeTransaction.js"],"names":["MosaicSupplyChangeTransactionBuffer","Buffers","require","flatbuffers","MosaicSupplyChangeTransaction","Builder","fee","version","type","deadline","mosaicId","direction","delta","builder","signatureVector","createSignatureVector","Array","map","Number","prototype","valueOf","signerVector","createSignerVector","deadlineVector","createDeadlineVector","feeVector","createFeeVector","mosaicIdVector","deltaVector","startMosaicSupplyChangeTransactionBuffer","addSize","addSignature","addSigner","addVersion","addType","addFee","addDeadline","addMosaicId","addDirection","addDelta","codedMosaicChangeSupply","endMosaicSupplyChangeTransactionBuffer","finish","bytes","asUint8Array"],"mappings":"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","file":"MosaicSupplyChangeTransaction.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport VerifiableTransaction from './VerifiableTransaction';\nimport MosaicSupplyChangeTransactionSchema from '../schema/MosaicSupplyChangeTransactionSchema';\nimport MosaicSupplyChangeTransactionBufferPackage from '../buffers/MosaicSupplyChangeTransactionBuffer';\n\nconst { MosaicSupplyChangeTransactionBuffer } = MosaicSupplyChangeTransactionBufferPackage.Buffers;\n\nconst { flatbuffers } = require('flatbuffers');\n\n/**\n * @module transactions/MosaicSupplyChangeTransaction\n */\nexport default class MosaicSupplyChangeTransaction extends VerifiableTransaction {\n\tstatic get Builder() {\n\t\tclass Builder {\n\t\t\tconstructor() {\n\t\t\t\tthis.fee = [0, 0];\n\t\t\t\tthis.version = 36867;\n\t\t\t\tthis.type = 0x424d;\n\t\t\t}\n\n\t\t\taddFee(fee) {\n\t\t\t\tthis.fee = fee;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddVersion(version) {\n\t\t\t\tthis.version = version;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddType(type) {\n\t\t\t\tthis.type = type;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDeadline(deadline) {\n\t\t\t\tthis.deadline = deadline;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddMosaicId(mosaicId) {\n\t\t\t\tthis.mosaicId = mosaicId;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDirection(direction) {\n\t\t\t\tthis.direction = direction;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDelta(delta) {\n\t\t\t\tthis.delta = delta;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tbuild() {\n\t\t\t\tconst builder = new flatbuffers.Builder(1);\n\n\t\t\t\t// Create vectors\n\t\t\t\tconst signatureVector = MosaicSupplyChangeTransactionBuffer\n\t\t\t\t\t.createSignatureVector(builder, Array(...Array(64)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst signerVector = MosaicSupplyChangeTransactionBuffer\n\t\t\t\t\t.createSignerVector(builder, Array(...Array(32)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst deadlineVector = MosaicSupplyChangeTransactionBuffer\n\t\t\t\t\t.createDeadlineVector(builder, this.deadline);\n\t\t\t\tconst feeVector = MosaicSupplyChangeTransactionBuffer\n\t\t\t\t\t.createFeeVector(builder, this.fee);\n\t\t\t\tconst mosaicIdVector = MosaicSupplyChangeTransactionBuffer\n\t\t\t\t\t.createFeeVector(builder, this.mosaicId);\n\t\t\t\tconst deltaVector = MosaicSupplyChangeTransactionBuffer\n\t\t\t\t\t.createFeeVector(builder, this.delta);\n\n\n\t\t\t\tMosaicSupplyChangeTransactionBuffer.startMosaicSupplyChangeTransactionBuffer(builder);\n\t\t\t\tMosaicSupplyChangeTransactionBuffer.addSize(builder, 137);\n\t\t\t\tMosaicSupplyChangeTransactionBuffer.addSignature(builder, signatureVector);\n\t\t\t\tMosaicSupplyChangeTransactionBuffer.addSigner(builder, signerVector);\n\t\t\t\tMosaicSupplyChangeTransactionBuffer.addVersion(builder, this.version);\n\t\t\t\tMosaicSupplyChangeTransactionBuffer.addType(builder, this.type);\n\t\t\t\tMosaicSupplyChangeTransactionBuffer.addFee(builder, feeVector);\n\t\t\t\tMosaicSupplyChangeTransactionBuffer.addDeadline(builder, deadlineVector);\n\t\t\t\tMosaicSupplyChangeTransactionBuffer.addMosaicId(builder, mosaicIdVector);\n\t\t\t\tMosaicSupplyChangeTransactionBuffer.addDirection(builder, this.direction);\n\t\t\t\tMosaicSupplyChangeTransactionBuffer.addDelta(builder, deltaVector);\n\n\t\t\t\t// Calculate size\n\t\t\t\tconst codedMosaicChangeSupply = MosaicSupplyChangeTransactionBuffer.endMosaicSupplyChangeTransactionBuffer(builder);\n\t\t\t\tbuilder.finish(codedMosaicChangeSupply);\n\n\t\t\t\tconst bytes = builder.asUint8Array();\n\t\t\t\treturn new MosaicSupplyChangeTransaction(bytes, MosaicSupplyChangeTransactionSchema);\n\t\t\t}\n\t\t}\n\n\t\treturn Builder;\n\t}\n}\n"]}