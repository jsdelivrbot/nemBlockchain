{"version":3,"sources":["../../src/transactions/TransferTransaction.js"],"names":["TransferTransactionBufferPackage","require","flatbuffers","address","default","Buffers","TransferTransactionBuffer","MessageBuffer","MosaicBuffer","TransferTransaction","Builder","fee","version","type","deadline","recipient","stringToAddress","message","mosaics","sort","a","b","Number","id","builder","bytePayload","hexToUint8","utf8ToHex","payload","createPayloadVector","startMessageBuffer","addType","addPayload","endMessageBuffer","forEach","createIdVector","mosaic","amount","createAmountVector","startMosaicBuffer","addId","addAmount","push","endMosaicBuffer","signatureVector","createSignatureVector","Array","map","prototype","valueOf","signerVector","createSignerVector","deadlineVector","createDeadlineVector","feeVector","createFeeVector","recipientVector","createRecipientVector","mosaicsVector","createMosaicsVector","startTransferTransactionBuffer","addSize","length","addSignature","addSigner","addVersion","addFee","addDeadline","addRecipient","addNumMosaics","addMessageSize","addMessage","addMosaics","codedTransfer","endTransferTransactionBuffer","finish","bytes","asUint8Array"],"mappings":"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","file":"TransferTransaction.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module transactions/TransferTransaction\n */\nimport VerifiableTransaction from './VerifiableTransaction';\nimport * as TransferTransactionBufferPackage from '../buffers/TransferTransactionBuffer';\nimport convert from '../coders/convert';\nimport TransferTransactionSchema from '../schema/TransferTransactionSchema';\n\nconst { flatbuffers } = require('flatbuffers');\nconst address = require('../coders/address').default;\n\n\nconst { TransferTransactionBuffer, MessageBuffer, MosaicBuffer } = TransferTransactionBufferPackage.default.Buffers;\n\nexport default class TransferTransaction extends VerifiableTransaction {\n\tstatic get Builder() {\n\t\tclass Builder {\n\t\t\tconstructor() {\n\t\t\t\tthis.fee = [0, 0];\n\t\t\t\tthis.version = 36867;\n\t\t\t\tthis.type = 0x4154;\n\t\t\t}\n\n\t\t\taddFee(fee) {\n\t\t\t\tthis.fee = fee;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddVersion(version) {\n\t\t\t\tthis.version = version;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddType(type) {\n\t\t\t\tthis.type = type;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDeadline(deadline) {\n\t\t\t\tthis.deadline = deadline;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddRecipient(recipient) {\n\t\t\t\tthis.recipient = address.stringToAddress(recipient);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddMessage(message) {\n\t\t\t\tthis.message = message;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddMosaics(mosaics) {\n\t\t\t\tthis.mosaics = mosaics.sort((a, b) => {\n\t\t\t\t\tif (Number(a.id[1]) > b.id[1]) return 1;\n\t\t\t\t\telse if (a.id[1] < b.id[1]) return -1;\n\t\t\t\t\treturn 0;\n\t\t\t\t});\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tbuild() {\n\t\t\t\tconst builder = new flatbuffers.Builder(1);\n\t\t\t\t// Constants\n\n\t\t\t\t// Create message\n\t\t\t\tconst bytePayload = convert.hexToUint8(convert.utf8ToHex(this.message.payload));\n\t\t\t\tconst payload = MessageBuffer.createPayloadVector(builder, bytePayload);\n\t\t\t\tMessageBuffer.startMessageBuffer(builder);\n\t\t\t\tMessageBuffer.addType(builder, this.message.type);\n\t\t\t\tMessageBuffer.addPayload(builder, payload);\n\t\t\t\tconst message = MessageBuffer.endMessageBuffer(builder);\n\n\t\t\t\t// Create mosaics\n\t\t\t\tconst mosaics = [];\n\t\t\t\tthis.mosaics.forEach(mosaic => {\n\t\t\t\t\tconst id = MosaicBuffer.createIdVector(builder, mosaic.id);\n\t\t\t\t\tconst amount = MosaicBuffer.createAmountVector(builder, mosaic.amount);\n\t\t\t\t\tMosaicBuffer.startMosaicBuffer(builder);\n\t\t\t\t\tMosaicBuffer.addId(builder, id);\n\t\t\t\t\tMosaicBuffer.addAmount(builder, amount);\n\t\t\t\t\tmosaics.push(MosaicBuffer.endMosaicBuffer(builder));\n\t\t\t\t});\n\n\t\t\t\t// Create vectors\n\t\t\t\tconst signatureVector = TransferTransactionBuffer\n\t\t\t\t\t.createSignatureVector(builder, Array(...Array(64)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst signerVector = TransferTransactionBuffer.createSignerVector(builder, Array(...Array(32)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst deadlineVector = TransferTransactionBuffer.createDeadlineVector(builder, this.deadline);\n\t\t\t\tconst feeVector = TransferTransactionBuffer.createFeeVector(builder, this.fee);\n\t\t\t\tconst recipientVector = TransferTransactionBuffer.createRecipientVector(builder, this.recipient);\n\t\t\t\tconst mosaicsVector = TransferTransactionBuffer.createMosaicsVector(builder, mosaics);\n\n\n\t\t\t\tTransferTransactionBuffer.startTransferTransactionBuffer(builder);\n\t\t\t\tTransferTransactionBuffer.addSize(builder, 149 + (16 * this.mosaics.length) + bytePayload.length);\n\t\t\t\tTransferTransactionBuffer.addSignature(builder, signatureVector);\n\t\t\t\tTransferTransactionBuffer.addSigner(builder, signerVector);\n\t\t\t\tTransferTransactionBuffer.addVersion(builder, this.version);\n\t\t\t\tTransferTransactionBuffer.addType(builder, this.type);\n\t\t\t\tTransferTransactionBuffer.addFee(builder, feeVector);\n\t\t\t\tTransferTransactionBuffer.addDeadline(builder, deadlineVector);\n\t\t\t\tTransferTransactionBuffer.addRecipient(builder, recipientVector);\n\t\t\t\tTransferTransactionBuffer.addNumMosaics(builder, this.mosaics.length);\n\t\t\t\tTransferTransactionBuffer.addMessageSize(builder, bytePayload.length + 1);\n\t\t\t\tTransferTransactionBuffer.addMessage(builder, message);\n\t\t\t\tTransferTransactionBuffer.addMosaics(builder, mosaicsVector);\n\n\n\t\t\t\t// Calculate size\n\n\t\t\t\tconst codedTransfer = TransferTransactionBuffer.endTransferTransactionBuffer(builder);\n\t\t\t\tbuilder.finish(codedTransfer);\n\n\t\t\t\tconst bytes = builder.asUint8Array();\n\t\t\t\treturn new TransferTransaction(bytes, TransferTransactionSchema);\n\t\t\t}\n\t\t}\n\n\t\treturn Builder;\n\t}\n}\n"]}