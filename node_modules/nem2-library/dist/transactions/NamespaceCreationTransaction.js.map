{"version":3,"sources":["../../src/transactions/NamespaceCreationTransaction.js"],"names":["NamespaceCreationTransactionBufferPackage","NamespaceCreationTransactionBuffer","default","Buffers","require","flatbuffers","NamespaceCreationTransaction","Builder","fee","version","type","deadline","namespaceType","duration","parentId","namespaceId","namespaceName","builder","namespaceNameLength","utf8ToHex","length","signatureVector","createSignatureVector","Array","map","Number","prototype","valueOf","signerVector","createSignerVector","deadlineVector","createDeadlineVector","feeVector","createFeeVector","parentIdVector","durationParentIdVector","createDurationParentIdVector","namespaceIdVector","createNamespaceIdVector","name","createString","startNamespaceCreationTransactionBuffer","addSize","addSignature","addSigner","addVersion","addType","addFee","addDeadline","addNamespaceType","addDurationParentId","addNamespaceId","addNamespaceNameSize","addNamespaceName","codedNamespace","endNamespaceCreationTransactionBuffer","finish","bytes","asUint8Array"],"mappings":"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","file":"NamespaceCreationTransaction.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @module transactions/NamespaceCreationTransaction\n */\nimport VerifiableTransaction from './VerifiableTransaction';\nimport NamespaceCreationTransactionSchema from '../schema/NamespaceCreationTransactionSchema';\nimport convert from '../coders/convert';\nimport * as NamespaceCreationTransactionBufferPackage from '../buffers/NamespaceCreationTransactionBuffer';\n\nconst { NamespaceCreationTransactionBuffer } = NamespaceCreationTransactionBufferPackage.default.Buffers;\n\nconst { flatbuffers } = require('flatbuffers');\n\nexport default class NamespaceCreationTransaction extends VerifiableTransaction {\n\tstatic get Builder() {\n\t\tclass Builder {\n\t\t\tconstructor() {\n\t\t\t\tthis.fee = [0, 0];\n\t\t\t\tthis.version = 36867;\n\t\t\t\tthis.type = 0x414e;\n\t\t\t}\n\n\t\t\taddFee(fee) {\n\t\t\t\tthis.fee = fee;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddVersion(version) {\n\t\t\t\tthis.version = version;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddType(type) {\n\t\t\t\tthis.type = type;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDeadline(deadline) {\n\t\t\t\tthis.deadline = deadline;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddNamespaceType(namespaceType) {\n\t\t\t\tthis.namespaceType = namespaceType;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddDuration(duration) {\n\t\t\t\tthis.duration = duration;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddParentId(parentId) {\n\t\t\t\tthis.parentId = parentId;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddNamespaceId(namespaceId) {\n\t\t\t\tthis.namespaceId = namespaceId;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\taddNamespaceName(namespaceName) {\n\t\t\t\tthis.namespaceName = namespaceName;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tbuild() {\n\t\t\t\tconst builder = new flatbuffers.Builder(1);\n\n\t\t\t\tconst namespaceNameLength = convert.utf8ToHex(this.namespaceName).length / 2;\n\n\t\t\t\t// create vectors\n\t\t\t\tconst signatureVector = NamespaceCreationTransactionBuffer\n\t\t\t\t\t.createSignatureVector(builder, Array(...Array(64)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst signerVector = NamespaceCreationTransactionBuffer\n\t\t\t\t\t.createSignerVector(builder, Array(...Array(32)).map(Number.prototype.valueOf, 0));\n\t\t\t\tconst deadlineVector = NamespaceCreationTransactionBuffer\n\t\t\t\t\t.createDeadlineVector(builder, this.deadline);\n\t\t\t\tconst feeVector = NamespaceCreationTransactionBuffer\n\t\t\t\t\t.createFeeVector(builder, this.fee);\n\t\t\t\tconst parentIdVector = 1 === this.namespaceType ? this.parentId : this.duration;\n\t\t\t\tconst durationParentIdVector = NamespaceCreationTransactionBuffer\n\t\t\t\t\t.createDurationParentIdVector(builder, parentIdVector);\n\t\t\t\tconst namespaceIdVector = NamespaceCreationTransactionBuffer\n\t\t\t\t\t.createNamespaceIdVector(builder, this.namespaceId);\n\n\t\t\t\tconst name = builder.createString(this.namespaceName);\n\n\t\t\t\tNamespaceCreationTransactionBuffer.startNamespaceCreationTransactionBuffer(builder);\n\t\t\t\tNamespaceCreationTransactionBuffer.addSize(builder, 138 + namespaceNameLength);\n\t\t\t\tNamespaceCreationTransactionBuffer.addSignature(builder, signatureVector);\n\t\t\t\tNamespaceCreationTransactionBuffer.addSigner(builder, signerVector);\n\t\t\t\tNamespaceCreationTransactionBuffer.addVersion(builder, this.version);\n\t\t\t\tNamespaceCreationTransactionBuffer.addType(builder, this.type);\n\t\t\t\tNamespaceCreationTransactionBuffer.addFee(builder, feeVector);\n\t\t\t\tNamespaceCreationTransactionBuffer.addDeadline(builder, deadlineVector);\n\t\t\t\tNamespaceCreationTransactionBuffer.addNamespaceType(builder, this.namespaceType);\n\t\t\t\tNamespaceCreationTransactionBuffer.addDurationParentId(builder, durationParentIdVector);\n\t\t\t\tNamespaceCreationTransactionBuffer.addNamespaceId(builder, namespaceIdVector);\n\t\t\t\tNamespaceCreationTransactionBuffer.addNamespaceNameSize(builder, namespaceNameLength);\n\t\t\t\tNamespaceCreationTransactionBuffer.addNamespaceName(builder, name);\n\n\t\t\t\t// Calculate size\n\t\t\t\tconst codedNamespace = NamespaceCreationTransactionBuffer.endNamespaceCreationTransactionBuffer(builder);\n\t\t\t\tbuilder.finish(codedNamespace);\n\n\t\t\t\tconst bytes = builder.asUint8Array();\n\t\t\t\treturn new NamespaceCreationTransaction(bytes, NamespaceCreationTransactionSchema);\n\t\t\t}\n\t\t}\n\n\t\treturn Builder;\n\t}\n}\n"]}