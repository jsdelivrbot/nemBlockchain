{"version":3,"sources":["../../src/model/AccountInfoDTO.js"],"names":["AccountInfoDTO","meta","account","undefined","data","obj","hasOwnProperty","constructFromObject"],"mappings":";;;;;;qjBAAA;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;AAcA;;;;AACA;;;;;;;;AAGA;;;;;IAKqBA,c;AACpB;;;;;;;;AAQA,yBAAYC,IAAZ,EAAkBC,OAAlB,EAA2B;AAAA;;AAAA,OAiC3BD,IAjC2B,GAiCpBE,SAjCoB;AAAA,OAqC3BD,OArC2B,GAqCjBC,SArCiB;;;AAG1B,OAAK,MAAL,IAAeF,IAAf,CAAoB,KAAK,SAAL,IAAkBC,OAAlB;AAGpB;;AAED;;;;;;;;;;;sCAO2BE,I,EAAMC,G,EAAK;AACrC,OAAID,IAAJ,EAAU;AACTC,UAAMA,OAAO,IAAIL,cAAJ,EAAb;;AAGA,QAAII,KAAKE,cAAL,CAAoB,MAApB,CAAJ,EAAiC;AAChCD,SAAI,MAAJ,IAAc,yBAAeE,mBAAf,CAAmCH,KAAK,MAAL,CAAnC,CAAd;AACA;AACD,QAAIA,KAAKE,cAAL,CAAoB,SAApB,CAAJ,EAAoC;AACnCD,SAAI,SAAJ,IAAiB,qBAAWE,mBAAX,CAA+BH,KAAK,SAAL,CAA/B,CAAjB;AACA;AACD;AACD,UAAOC,GAAP;AACA;;AAED;;;;AAIA;;;;;;;;;kBA3CoBL,c","file":"AccountInfoDTO.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * NIS2 API\n * This document defines all the nis2 api routes and behaviour\n *\n * OpenAPI spec version: 1.0.0\n * Contact: guillemchain@gmail.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport AccountDTO from './AccountDTO';\nimport AccountMetaDTO from './AccountMetaDTO';\n\n\n/**\n* The AccountInfoDTO model module.\n* @module model/AccountInfoDTO\n* @version 1.0.0\n*/\nexport default class AccountInfoDTO {\n\t/**\n\t * Constructs a new <code>AccountInfoDTO</code>.\n\t * @alias module:model/AccountInfoDTO\n\t * @class\n\t * @param meta {module:model/AccountMetaDTO}\n\t * @param account {module:model/AccountDTO}\n\t */\n\n\tconstructor(meta, account) {\n\n\n\t\tthis['meta'] = meta;this['account'] = account;\n\n\n\t}\n\n\t/**\n\t * Constructs a <code>AccountInfoDTO</code> from a plain JavaScript object, optionally creating a new instance.\n\t * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n\t * @param {Object} data The plain JavaScript object bearing properties of interest.\n\t * @param {module:model/AccountInfoDTO} obj Optional instance to populate.\n\t * @return {module:model/AccountInfoDTO} The populated <code>AccountInfoDTO</code> instance.\n\t */\n\tstatic constructFromObject(data, obj) {\n\t\tif (data) {\n\t\t\tobj = obj || new AccountInfoDTO();\n\n\n\t\t\tif (data.hasOwnProperty('meta')) {\n\t\t\t\tobj['meta'] = AccountMetaDTO.constructFromObject(data['meta']);\n\t\t\t}\n\t\t\tif (data.hasOwnProperty('account')) {\n\t\t\t\tobj['account'] = AccountDTO.constructFromObject(data['account']);\n\t\t\t}\n\t\t}\n\t\treturn obj;\n\t}\n\n\t/**\n\t * @member {module:model/AccountMetaDTO} meta\n\t */\n\tmeta = undefined;\n\t/**\n\t * @member {module:model/AccountDTO} account\n\t */\n\taccount = undefined;\n\n\n}\n\n\n"]}