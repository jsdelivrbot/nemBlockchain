{"version":3,"sources":["../../src/model/MosaicInfoDTO.js"],"names":["MosaicInfoDTO","meta","mosaic","undefined","data","obj","hasOwnProperty","constructFromObject"],"mappings":";;;;;;qjBAAA;;;;;;;;;;;;;;;;AAgBA;;;;;;;;;;;;;AAcA;;;;AACA;;;;;;;;AAGA;;;;;IAKqBA,a;AACpB;;;;;;;;AAQA,wBAAYC,IAAZ,EAAkBC,MAAlB,EAA0B;AAAA;;AAAA,OAiC1BD,IAjC0B,GAiCnBE,SAjCmB;AAAA,OAqC1BD,MArC0B,GAqCjBC,SArCiB;;;AAGzB,OAAK,MAAL,IAAeF,IAAf,CAAoB,KAAK,QAAL,IAAiBC,MAAjB;AAGpB;;AAED;;;;;;;;;;;sCAO2BE,I,EAAMC,G,EAAK;AACrC,OAAID,IAAJ,EAAU;AACTC,UAAMA,OAAO,IAAIL,aAAJ,EAAb;;AAGA,QAAII,KAAKE,cAAL,CAAoB,MAApB,CAAJ,EAAiC;AAChCD,SAAI,MAAJ,IAAc,iCAAuBE,mBAAvB,CAA2CH,KAAK,MAAL,CAA3C,CAAd;AACA;AACD,QAAIA,KAAKE,cAAL,CAAoB,QAApB,CAAJ,EAAmC;AAClCD,SAAI,QAAJ,IAAgB,8BAAoBE,mBAApB,CAAwCH,KAAK,QAAL,CAAxC,CAAhB;AACA;AACD;AACD,UAAOC,GAAP;AACA;;AAED;;;;AAIA;;;;;;;;;kBA3CoBL,a","file":"MosaicInfoDTO.js","sourcesContent":["/*\n * Copyright 2018 NEM\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * NIS2 API\n * This document defines all the nis2 api routes and behaviour\n *\n * OpenAPI spec version: 1.0.0\n * Contact: guillemchain@gmail.com\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n */\n\n\nimport MosaicDefinitionDTO from './MosaicDefinitionDTO';\nimport NamespaceMosaicMetaDTO from './NamespaceMosaicMetaDTO';\n\n\n/**\n* The MosaicInfoDTO model module.\n* @module model/MosaicInfoDTO\n* @version 1.0.0\n*/\nexport default class MosaicInfoDTO {\n\t/**\n\t * Constructs a new <code>MosaicInfoDTO</code>.\n\t * @alias module:model/MosaicInfoDTO\n\t * @class\n\t * @param meta {module:model/NamespaceMosaicMetaDTO}\n\t * @param mosaic {module:model/MosaicDefinitionDTO}\n\t */\n\n\tconstructor(meta, mosaic) {\n\n\n\t\tthis['meta'] = meta;this['mosaic'] = mosaic;\n\n\n\t}\n\n\t/**\n\t * Constructs a <code>MosaicInfoDTO</code> from a plain JavaScript object, optionally creating a new instance.\n\t * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n\t * @param {Object} data The plain JavaScript object bearing properties of interest.\n\t * @param {module:model/MosaicInfoDTO} obj Optional instance to populate.\n\t * @return {module:model/MosaicInfoDTO} The populated <code>MosaicInfoDTO</code> instance.\n\t */\n\tstatic constructFromObject(data, obj) {\n\t\tif (data) {\n\t\t\tobj = obj || new MosaicInfoDTO();\n\n\n\t\t\tif (data.hasOwnProperty('meta')) {\n\t\t\t\tobj['meta'] = NamespaceMosaicMetaDTO.constructFromObject(data['meta']);\n\t\t\t}\n\t\t\tif (data.hasOwnProperty('mosaic')) {\n\t\t\t\tobj['mosaic'] = MosaicDefinitionDTO.constructFromObject(data['mosaic']);\n\t\t\t}\n\t\t}\n\t\treturn obj;\n\t}\n\n\t/**\n\t * @member {module:model/NamespaceMosaicMetaDTO} meta\n\t */\n\tmeta = undefined;\n\t/**\n\t * @member {module:model/MosaicDefinitionDTO} mosaic\n\t */\n\tmosaic = undefined;\n\n\n}\n\n\n"]}